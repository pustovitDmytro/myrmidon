version: "{build}"
environment:
  YARGS_MIN_NODE_VERSION: 10
  TimeOutMins: 2
  matrix:
  - job_name: Build
    appveyor_build_worker_image: Ubuntu
    nodejs_version: 14

    # Ubuntu

  - job_name: Ubuntu Node.js v.10
    job_group: Tests
    appveyor_build_worker_image: Ubuntu
    job_depends_on: Build
    nodejs_version: 10

  - job_name: Ubuntu Node.js v.12
    job_group: Tests
    appveyor_build_worker_image: Ubuntu
    job_depends_on: Build
    nodejs_version: 12

  - job_name: Ubuntu Node.js v.14
    job_group: Tests
    appveyor_build_worker_image: Ubuntu
    job_depends_on: Build
    nodejs_version: 14

  - job_name: Ubuntu Node.js v.16
    job_group: Tests
    appveyor_build_worker_image: Ubuntu
    job_depends_on: Build
    nodejs_version: 16

  #   # MacOS
  
  - job_name: macOS Node.js v.10
    job_group: Tests
    appveyor_build_worker_image: macos
    job_depends_on: Build
    nodejs_version: 10

  - job_name: macOS Node.js v.12
    job_group: Tests
    appveyor_build_worker_image: macos
    job_depends_on: Build
    nodejs_version: 12

  - job_name: macOS Node.js v.14
    job_group: Tests
    appveyor_build_worker_image: macos
    job_depends_on: Build
    nodejs_version: 14

  - job_name: macOS Node.js v.16
    job_group: Tests
    appveyor_build_worker_image: macos
    job_depends_on: Build
    nodejs_version: 16

  #   # Windows

  - job_name: Windows Node.js v.10
    job_group: Tests
    appveyor_build_worker_image: Visual Studio 2019
    job_depends_on: Build
    nodejs_version: 10
  
  - job_name: Windows Node.js v.12
    job_group: Tests
    appveyor_build_worker_image: Visual Studio 2019
    job_depends_on: Build
    nodejs_version: 12
  
  - job_name: Windows Node.js v.14
    job_group: Tests
    appveyor_build_worker_image: Visual Studio 2019
    job_depends_on: Build
    nodejs_version: 14

  - job_name: Windows Node.js v.16
    job_group: Tests
    appveyor_build_worker_image: Visual Studio 2019
    job_depends_on: Build
    nodejs_version: 16

# matrix:
#   allow_failures:
#     - nodejs_version: 16

artifacts:
  - path: tmp
    name: package-tests

for:

  -
    matrix:
      only:
        - job_name: Build

    build_script:
      - sh: nvm install $nodejs_version
      - sh: nvm use $nodejs_version
      - sh: npm config get user-agent
      - npm install
      - npx npt pack -c .package-tester.json
  -
    matrix:
      only:
        - job_group: Tests
    install: 
      - sh: nvm install $nodejs_version
      - sh: nvm use $nodejs_version
      - ps: if ($isWindows) { Install-Product node $env:nodejs_version $env:platform }
      - npm config get user-agent
    before_build:
      - ps: |
          $headers = @{
              "Authorization" = "Bearer $ApiKey"
              "Content-type" = "application/json"
          }
          [datetime]$stop = ([datetime]::Now).AddMinutes($env:TimeOutMins)
          [bool]$success = $false  
    
          while(!$success -and ([datetime]::Now) -lt $stop) {
              $project = Invoke-RestMethod -Uri "https://ci.appveyor.com/api/projects/$env:APPVEYOR_ACCOUNT_NAME/$env:APPVEYOR_PROJECT_SLUG/builds/$env:APPVEYOR_BUILD_ID" -Headers $headers -Method GET

              $jobToWaitJson = $project.build.jobs | where {$_.name -eq "Build"}  
              $success = $jobToWaitJson.status -eq "success"
              $jobToWaitId = $jobToWaitJson.jobId;
              if (!$success) {Start-sleep 5}
          }
    
          if (!$success) {throw "Job `"Build`" was not finished in $env:TimeOutMins minutes"}
          if (!$jobToWaitId) {throw "Unable t get JobId for the job `"Build`""}

          Start-FileDownload  https://ci.appveyor.com/api/buildjobs/$jobToWaitId/artifacts/package-tests.zip
    build_script:      
      - 7z x package-tests.zip
      - cd package-tests
      - npm i
    test_script:
      - npm run test

